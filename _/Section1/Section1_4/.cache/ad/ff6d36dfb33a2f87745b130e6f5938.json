{"id":"node_modules/ml-kernel/src/kernel.js","dependencies":[{"name":"/home/arish/ML_JS/Code/Section 1_4/package.json","includedInParent":true,"mtime":1549691485639},{"name":"/home/arish/ML_JS/Code/Section 1_4/node_modules/ml-kernel/package.json","includedInParent":true,"mtime":1549691485607},{"name":"ml-matrix","loc":{"line":3,"column":23},"parent":"/home/arish/ML_JS/Code/Section 1_4/node_modules/ml-kernel/src/kernel.js","resolved":"/home/arish/ML_JS/Code/Section 1_4/node_modules/ml-matrix/src/index.js"},{"name":"ml-kernel-gaussian","loc":{"line":5,"column":31},"parent":"/home/arish/ML_JS/Code/Section 1_4/node_modules/ml-kernel/src/kernel.js","resolved":"/home/arish/ML_JS/Code/Section 1_4/node_modules/ml-kernel-gaussian/gaussian-kernel.js"},{"name":"ml-kernel-polynomial","loc":{"line":6,"column":33},"parent":"/home/arish/ML_JS/Code/Section 1_4/node_modules/ml-kernel/src/kernel.js","resolved":"/home/arish/ML_JS/Code/Section 1_4/node_modules/ml-kernel-polynomial/polynomial-kernel.js"},{"name":"./kernels/anova-kernel","loc":{"line":7,"column":28},"parent":"/home/arish/ML_JS/Code/Section 1_4/node_modules/ml-kernel/src/kernel.js","resolved":"/home/arish/ML_JS/Code/Section 1_4/node_modules/ml-kernel/src/kernels/anova-kernel.js"},{"name":"./kernels/cauchy-kernel","loc":{"line":8,"column":29},"parent":"/home/arish/ML_JS/Code/Section 1_4/node_modules/ml-kernel/src/kernel.js","resolved":"/home/arish/ML_JS/Code/Section 1_4/node_modules/ml-kernel/src/kernels/cauchy-kernel.js"},{"name":"./kernels/exponential-kernel","loc":{"line":9,"column":34},"parent":"/home/arish/ML_JS/Code/Section 1_4/node_modules/ml-kernel/src/kernel.js","resolved":"/home/arish/ML_JS/Code/Section 1_4/node_modules/ml-kernel/src/kernels/exponential-kernel.js"},{"name":"./kernels/histogram-intersection-kernel","loc":{"line":10,"column":32},"parent":"/home/arish/ML_JS/Code/Section 1_4/node_modules/ml-kernel/src/kernel.js","resolved":"/home/arish/ML_JS/Code/Section 1_4/node_modules/ml-kernel/src/kernels/histogram-intersection-kernel.js"},{"name":"./kernels/laplacian-kernel","loc":{"line":11,"column":32},"parent":"/home/arish/ML_JS/Code/Section 1_4/node_modules/ml-kernel/src/kernel.js","resolved":"/home/arish/ML_JS/Code/Section 1_4/node_modules/ml-kernel/src/kernels/laplacian-kernel.js"},{"name":"./kernels/multiquadratic-kernel","loc":{"line":12,"column":37},"parent":"/home/arish/ML_JS/Code/Section 1_4/node_modules/ml-kernel/src/kernel.js","resolved":"/home/arish/ML_JS/Code/Section 1_4/node_modules/ml-kernel/src/kernels/multiquadratic-kernel.js"},{"name":"./kernels/rational-quadratic-kernel","loc":{"line":13,"column":31},"parent":"/home/arish/ML_JS/Code/Section 1_4/node_modules/ml-kernel/src/kernel.js","resolved":"/home/arish/ML_JS/Code/Section 1_4/node_modules/ml-kernel/src/kernels/rational-quadratic-kernel.js"},{"name":"ml-kernel-sigmoid","loc":{"line":14,"column":30},"parent":"/home/arish/ML_JS/Code/Section 1_4/node_modules/ml-kernel/src/kernel.js","resolved":"/home/arish/ML_JS/Code/Section 1_4/node_modules/ml-kernel-sigmoid/sigmoid-kernel.js"}],"generated":{"js":"'use strict';\n\nconst Matrix = require('ml-matrix').Matrix;\n\nconst GaussianKernel = require('ml-kernel-gaussian');\nconst PolynomialKernel = require('ml-kernel-polynomial');\nconst ANOVAKernel = require('./kernels/anova-kernel');\nconst CauchyKernel = require('./kernels/cauchy-kernel');\nconst ExponentialKernel = require('./kernels/exponential-kernel');\nconst HistogramKernel = require('./kernels/histogram-intersection-kernel');\nconst LaplacianKernel = require('./kernels/laplacian-kernel');\nconst MultiquadraticKernel = require('./kernels/multiquadratic-kernel');\nconst RationalKernel = require('./kernels/rational-quadratic-kernel');\nconst SigmoidKernel = require('ml-kernel-sigmoid');\n\nconst kernelType = {\n    gaussian: GaussianKernel,\n    rbf: GaussianKernel,\n    polynomial: PolynomialKernel,\n    poly: PolynomialKernel,\n    anova: ANOVAKernel,\n    cauchy: CauchyKernel,\n    exponential: ExponentialKernel,\n    histogram: HistogramKernel,\n    min: HistogramKernel,\n    laplacian: LaplacianKernel,\n    multiquadratic: MultiquadraticKernel,\n    rational: RationalKernel,\n    sigmoid: SigmoidKernel,\n    mlp: SigmoidKernel\n};\n\nclass Kernel {\n    constructor(type, options) {\n        this.kernelType = type;\n        if (type === 'linear') return;\n\n        if (typeof type === 'string') {\n            type = type.toLowerCase();\n\n            var KernelConstructor = kernelType[type];\n            if (KernelConstructor) {\n                this.kernelFunction = new KernelConstructor(options);\n            } else {\n                throw new Error('unsupported kernel type: ' + type);\n            }\n        } else if (typeof type === 'object' && typeof type.compute === 'function') {\n            this.kernelFunction = type;\n        } else {\n            throw new TypeError('first argument must be a valid kernel type or instance');\n        }\n    }\n\n    compute(inputs, landmarks) {\n        if (landmarks === undefined) {\n            landmarks = inputs;\n        }\n\n        if (this.kernelType === 'linear') {\n            var matrix = new Matrix(inputs);\n            return matrix.mmul(new Matrix(landmarks).transposeView());\n        }\n\n        const kernelMatrix = new Matrix(inputs.length, landmarks.length);\n        var i, j;\n        if (inputs === landmarks) { // fast path, matrix is symmetric\n            for (i = 0; i < inputs.length; i++) {\n                for (j = i; j < inputs.length; j++) {\n                    kernelMatrix[i][j] = kernelMatrix[j][i] = this.kernelFunction.compute(inputs[i], inputs[j]);\n                }\n            }\n        } else {\n            for (i = 0; i < inputs.length; i++) {\n                for (j = 0; j < landmarks.length; j++) {\n                    kernelMatrix[i][j] = this.kernelFunction.compute(inputs[i], landmarks[j]);\n                }\n            }\n        }\n        return kernelMatrix;\n    }\n}\n\nmodule.exports = Kernel;\n","map":{"mappings":[{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/ml-kernel/src/kernel.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}}],"sources":{"node_modules/ml-kernel/src/kernel.js":"'use strict';\n\nconst Matrix = require('ml-matrix').Matrix;\n\nconst GaussianKernel = require('ml-kernel-gaussian');\nconst PolynomialKernel = require('ml-kernel-polynomial');\nconst ANOVAKernel = require('./kernels/anova-kernel');\nconst CauchyKernel = require('./kernels/cauchy-kernel');\nconst ExponentialKernel = require('./kernels/exponential-kernel');\nconst HistogramKernel = require('./kernels/histogram-intersection-kernel');\nconst LaplacianKernel = require('./kernels/laplacian-kernel');\nconst MultiquadraticKernel = require('./kernels/multiquadratic-kernel');\nconst RationalKernel = require('./kernels/rational-quadratic-kernel');\nconst SigmoidKernel = require('ml-kernel-sigmoid');\n\nconst kernelType = {\n    gaussian: GaussianKernel,\n    rbf: GaussianKernel,\n    polynomial: PolynomialKernel,\n    poly: PolynomialKernel,\n    anova: ANOVAKernel,\n    cauchy: CauchyKernel,\n    exponential: ExponentialKernel,\n    histogram: HistogramKernel,\n    min: HistogramKernel,\n    laplacian: LaplacianKernel,\n    multiquadratic: MultiquadraticKernel,\n    rational: RationalKernel,\n    sigmoid: SigmoidKernel,\n    mlp: SigmoidKernel\n};\n\nclass Kernel {\n    constructor(type, options) {\n        this.kernelType = type;\n        if (type === 'linear') return;\n\n        if (typeof type === 'string') {\n            type = type.toLowerCase();\n\n            var KernelConstructor = kernelType[type];\n            if (KernelConstructor) {\n                this.kernelFunction = new KernelConstructor(options);\n            } else {\n                throw new Error('unsupported kernel type: ' + type);\n            }\n        } else if (typeof type === 'object' && typeof type.compute === 'function') {\n            this.kernelFunction = type;\n        } else {\n            throw new TypeError('first argument must be a valid kernel type or instance');\n        }\n    }\n\n    compute(inputs, landmarks) {\n        if (landmarks === undefined) {\n            landmarks = inputs;\n        }\n\n        if (this.kernelType === 'linear') {\n            var matrix = new Matrix(inputs);\n            return matrix.mmul(new Matrix(landmarks).transposeView());\n        }\n\n        const kernelMatrix = new Matrix(inputs.length, landmarks.length);\n        var i, j;\n        if (inputs === landmarks) { // fast path, matrix is symmetric\n            for (i = 0; i < inputs.length; i++) {\n                for (j = i; j < inputs.length; j++) {\n                    kernelMatrix[i][j] = kernelMatrix[j][i] = this.kernelFunction.compute(inputs[i], inputs[j]);\n                }\n            }\n        } else {\n            for (i = 0; i < inputs.length; i++) {\n                for (j = 0; j < landmarks.length; j++) {\n                    kernelMatrix[i][j] = this.kernelFunction.compute(inputs[i], landmarks[j]);\n                }\n            }\n        }\n        return kernelMatrix;\n    }\n}\n\nmodule.exports = Kernel;\n"},"lineCount":84}},"hash":"4a5c32d9f622688d7c05677d2e55542f","cacheData":{"env":{}}}