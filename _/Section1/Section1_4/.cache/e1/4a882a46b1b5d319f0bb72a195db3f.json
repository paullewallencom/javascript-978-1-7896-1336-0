{"id":"node_modules/ml-stat/matrix.js","dependencies":[{"name":"/home/arish/ML_JS/Code/Section 1_4/package.json","includedInParent":true,"mtime":1549691485639},{"name":"/home/arish/ML_JS/Code/Section 1_4/node_modules/ml-stat/package.json","includedInParent":true,"mtime":1549691485607},{"name":"./array","loc":{"line":3,"column":24},"parent":"/home/arish/ML_JS/Code/Section 1_4/node_modules/ml-stat/matrix.js","resolved":"/home/arish/ML_JS/Code/Section 1_4/node_modules/ml-stat/array.js"}],"generated":{"js":"'use strict';\n\nvar arrayStat = require('./array');\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\nexports.max = function max(matrix) {\n    var max = -Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] > max) max = matrix[i][j];\n        }\n    }\n    return max;\n};\n\nexports.min = function min(matrix) {\n    var min = Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] < min) min = matrix[i][j];\n        }\n    }\n    return min;\n};\n\nexports.minMax = function minMax(matrix) {\n    var min = Infinity;\n    var max = -Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] < min) min = matrix[i][j];\n            if (matrix[i][j] > max) max = matrix[i][j];\n        }\n    }\n    return {\n        min:min,\n        max:max\n    };\n};\n\nexports.entropy = function entropy(matrix, eps) {\n    if (typeof (eps) === 'undefined') {\n        eps = 0;\n    }\n    var sum = 0,\n        l1 = matrix.length,\n        l2 = matrix[0].length;\n    for (var i = 0; i < l1; i++) {\n        for (var j = 0; j < l2; j++) {\n            sum += matrix[i][j] * Math.log(matrix[i][j] + eps);\n        }\n    }\n    return -sum;\n};\n\nexports.mean = function mean(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theMean, N, i, j;\n\n    if (dimension === -1) {\n        theMean = [0];\n        N = rows * cols;\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theMean[0] += matrix[i][j];\n            }\n        }\n        theMean[0] /= N;\n    } else if (dimension === 0) {\n        theMean = new Array(cols);\n        N = rows;\n        for (j = 0; j < cols; j++) {\n            theMean[j] = 0;\n            for (i = 0; i < rows; i++) {\n                theMean[j] += matrix[i][j];\n            }\n            theMean[j] /= N;\n        }\n    } else if (dimension === 1) {\n        theMean = new Array(rows);\n        N = cols;\n        for (j = 0; j < rows; j++) {\n            theMean[j] = 0;\n            for (i = 0; i < cols; i++) {\n                theMean[j] += matrix[j][i];\n            }\n            theMean[j] /= N;\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theMean;\n};\n\nexports.sum = function sum(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theSum, i, j;\n\n    if (dimension === -1) {\n        theSum = [0];\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theSum[0] += matrix[i][j];\n            }\n        }\n    } else if (dimension === 0) {\n        theSum = new Array(cols);\n        for (j = 0; j < cols; j++) {\n            theSum[j] = 0;\n            for (i = 0; i < rows; i++) {\n                theSum[j] += matrix[i][j];\n            }\n        }\n    } else if (dimension === 1) {\n        theSum = new Array(rows);\n        for (j = 0; j < rows; j++) {\n            theSum[j] = 0;\n            for (i = 0; i < cols; i++) {\n                theSum[j] += matrix[j][i];\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theSum;\n};\n\nexports.product = function product(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theProduct, i, j;\n\n    if (dimension === -1) {\n        theProduct = [1];\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theProduct[0] *= matrix[i][j];\n            }\n        }\n    } else if (dimension === 0) {\n        theProduct = new Array(cols);\n        for (j = 0; j < cols; j++) {\n            theProduct[j] = 1;\n            for (i = 0; i < rows; i++) {\n                theProduct[j] *= matrix[i][j];\n            }\n        }\n    } else if (dimension === 1) {\n        theProduct = new Array(rows);\n        for (j = 0; j < rows; j++) {\n            theProduct[j] = 1;\n            for (i = 0; i < cols; i++) {\n                theProduct[j] *= matrix[j][i];\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theProduct;\n};\n\nexports.standardDeviation = function standardDeviation(matrix, means, unbiased) {\n    var vari = exports.variance(matrix, means, unbiased), l = vari.length;\n    for (var i = 0; i < l; i++) {\n        vari[i] = Math.sqrt(vari[i]);\n    }\n    return vari;\n};\n\nexports.variance = function variance(matrix, means, unbiased) {\n    if (typeof (unbiased) === 'undefined') {\n        unbiased = true;\n    }\n    means = means || exports.mean(matrix);\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length;\n    var vari = new Array(cols);\n\n    for (var j = 0; j < cols; j++) {\n        var sum1 = 0, sum2 = 0, x = 0;\n        for (var i = 0; i < rows; i++) {\n            x = matrix[i][j] - means[j];\n            sum1 += x;\n            sum2 += x * x;\n        }\n        if (unbiased) {\n            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / (rows - 1);\n        } else {\n            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / rows;\n        }\n    }\n    return vari;\n};\n\nexports.median = function median(matrix) {\n    var rows = matrix.length, cols = matrix[0].length;\n    var medians = new Array(cols);\n\n    for (var i = 0; i < cols; i++) {\n        var data = new Array(rows);\n        for (var j = 0; j < rows; j++) {\n            data[j] = matrix[j][i];\n        }\n        data.sort(compareNumbers);\n        var N = data.length;\n        if (N % 2 === 0) {\n            medians[i] = (data[N / 2] + data[(N / 2) - 1]) * 0.5;\n        } else {\n            medians[i] = data[Math.floor(N / 2)];\n        }\n    }\n    return medians;\n};\n\nexports.mode = function mode(matrix) {\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        modes = new Array(cols),\n        i, j;\n    for (i = 0; i < cols; i++) {\n        var itemCount = new Array(rows);\n        for (var k = 0; k < rows; k++) {\n            itemCount[k] = 0;\n        }\n        var itemArray = new Array(rows);\n        var count = 0;\n\n        for (j = 0; j < rows; j++) {\n            var index = itemArray.indexOf(matrix[j][i]);\n            if (index >= 0) {\n                itemCount[index]++;\n            } else {\n                itemArray[count] = matrix[j][i];\n                itemCount[count] = 1;\n                count++;\n            }\n        }\n\n        var maxValue = 0, maxIndex = 0;\n        for (j = 0; j < count; j++) {\n            if (itemCount[j] > maxValue) {\n                maxValue = itemCount[j];\n                maxIndex = j;\n            }\n        }\n\n        modes[i] = itemArray[maxIndex];\n    }\n    return modes;\n};\n\nexports.skewness = function skewness(matrix, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var means = exports.mean(matrix);\n    var n = matrix.length, l = means.length;\n    var skew = new Array(l);\n\n    for (var j = 0; j < l; j++) {\n        var s2 = 0, s3 = 0;\n        for (var i = 0; i < n; i++) {\n            var dev = matrix[i][j] - means[j];\n            s2 += dev * dev;\n            s3 += dev * dev * dev;\n        }\n\n        var m2 = s2 / n;\n        var m3 = s3 / n;\n        var g = m3 / Math.pow(m2, 3 / 2);\n\n        if (unbiased) {\n            var a = Math.sqrt(n * (n - 1));\n            var b = n - 2;\n            skew[j] = (a / b) * g;\n        } else {\n            skew[j] = g;\n        }\n    }\n    return skew;\n};\n\nexports.kurtosis = function kurtosis(matrix, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var means = exports.mean(matrix);\n    var n = matrix.length, m = matrix[0].length;\n    var kurt = new Array(m);\n\n    for (var j = 0; j < m; j++) {\n        var s2 = 0, s4 = 0;\n        for (var i = 0; i < n; i++) {\n            var dev = matrix[i][j] - means[j];\n            s2 += dev * dev;\n            s4 += dev * dev * dev * dev;\n        }\n        var m2 = s2 / n;\n        var m4 = s4 / n;\n\n        if (unbiased) {\n            var v = s2 / (n - 1);\n            var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n            var b = s4 / (v * v);\n            var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n            kurt[j] = a * b - 3 * c;\n        } else {\n            kurt[j] = m4 / (m2 * m2) - 3;\n        }\n    }\n    return kurt;\n};\n\nexports.standardError = function standardError(matrix) {\n    var samples = matrix.length;\n    var standardDeviations = exports.standardDeviation(matrix);\n    var l = standardDeviations.length;\n    var standardErrors = new Array(l);\n    var sqrtN = Math.sqrt(samples);\n\n    for (var i = 0; i < l; i++) {\n        standardErrors[i] = standardDeviations[i] / sqrtN;\n    }\n    return standardErrors;\n};\n\nexports.covariance = function covariance(matrix, dimension) {\n    return exports.scatter(matrix, undefined, dimension);\n};\n\nexports.scatter = function scatter(matrix, divisor, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    if (typeof (divisor) === 'undefined') {\n        if (dimension === 0) {\n            divisor = matrix.length - 1;\n        } else if (dimension === 1) {\n            divisor = matrix[0].length - 1;\n        }\n    }\n    var means = exports.mean(matrix, dimension);\n    var rows = matrix.length;\n    if (rows === 0) {\n        return [[]];\n    }\n    var cols = matrix[0].length,\n        cov, i, j, s, k;\n\n    if (dimension === 0) {\n        cov = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            cov[i] = new Array(cols);\n        }\n        for (i = 0; i < cols; i++) {\n            for (j = i; j < cols; j++) {\n                s = 0;\n                for (k = 0; k < rows; k++) {\n                    s += (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n                }\n                s /= divisor;\n                cov[i][j] = s;\n                cov[j][i] = s;\n            }\n        }\n    } else if (dimension === 1) {\n        cov = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            cov[i] = new Array(rows);\n        }\n        for (i = 0; i < rows; i++) {\n            for (j = i; j < rows; j++) {\n                s = 0;\n                for (k = 0; k < cols; k++) {\n                    s += (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n                }\n                s /= divisor;\n                cov[i][j] = s;\n                cov[j][i] = s;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    return cov;\n};\n\nexports.correlation = function correlation(matrix) {\n    var means = exports.mean(matrix),\n        standardDeviations = exports.standardDeviation(matrix, true, means),\n        scores = exports.zScores(matrix, means, standardDeviations),\n        rows = matrix.length,\n        cols = matrix[0].length,\n        i, j;\n\n    var cor = new Array(cols);\n    for (i = 0; i < cols; i++) {\n        cor[i] = new Array(cols);\n    }\n    for (i = 0; i < cols; i++) {\n        for (j = i; j < cols; j++) {\n            var c = 0;\n            for (var k = 0, l = scores.length; k < l; k++) {\n                c += scores[k][j] * scores[k][i];\n            }\n            c /= rows - 1;\n            cor[i][j] = c;\n            cor[j][i] = c;\n        }\n    }\n    return cor;\n};\n\nexports.zScores = function zScores(matrix, means, standardDeviations) {\n    means = means || exports.mean(matrix);\n    if (typeof (standardDeviations) === 'undefined') standardDeviations = exports.standardDeviation(matrix, true, means);\n    return exports.standardize(exports.center(matrix, means, false), standardDeviations, true);\n};\n\nexports.center = function center(matrix, means, inPlace) {\n    means = means || exports.mean(matrix);\n    var result = matrix,\n        l = matrix.length,\n        i, j, jj;\n\n    if (!inPlace) {\n        result = new Array(l);\n        for (i = 0; i < l; i++) {\n            result[i] = new Array(matrix[i].length);\n        }\n    }\n\n    for (i = 0; i < l; i++) {\n        var row = result[i];\n        for (j = 0, jj = row.length; j < jj; j++) {\n            row[j] = matrix[i][j] - means[j];\n        }\n    }\n    return result;\n};\n\nexports.standardize = function standardize(matrix, standardDeviations, inPlace) {\n    if (typeof (standardDeviations) === 'undefined') standardDeviations = exports.standardDeviation(matrix);\n    var result = matrix,\n        l = matrix.length,\n        i, j, jj;\n\n    if (!inPlace) {\n        result = new Array(l);\n        for (i = 0; i < l; i++) {\n            result[i] = new Array(matrix[i].length);\n        }\n    }\n\n    for (i = 0; i < l; i++) {\n        var resultRow = result[i];\n        var sourceRow = matrix[i];\n        for (j = 0, jj = resultRow.length; j < jj; j++) {\n            if (standardDeviations[j] !== 0 && !isNaN(standardDeviations[j])) {\n                resultRow[j] = sourceRow[j] / standardDeviations[j];\n            }\n        }\n    }\n    return result;\n};\n\nexports.weightedVariance = function weightedVariance(matrix, weights) {\n    var means = exports.mean(matrix);\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length;\n    var vari = new Array(cols);\n\n    for (var j = 0; j < cols; j++) {\n        var sum = 0;\n        var a = 0, b = 0;\n\n        for (var i = 0; i < rows; i++) {\n            var z = matrix[i][j] - means[j];\n            var w = weights[i];\n\n            sum += w * (z * z);\n            b += w;\n            a += w * w;\n        }\n\n        vari[j] = sum * (b / (b * b - a));\n    }\n\n    return vari;\n};\n\nexports.weightedMean = function weightedMean(matrix, weights, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length,\n        means, i, ii, j, w, row;\n\n    if (dimension === 0) {\n        means = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            means[i] = 0;\n        }\n        for (i = 0; i < rows; i++) {\n            row = matrix[i];\n            w = weights[i];\n            for (j = 0; j < cols; j++) {\n                means[j] += row[j] * w;\n            }\n        }\n    } else if (dimension === 1) {\n        means = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            means[i] = 0;\n        }\n        for (j = 0; j < rows; j++) {\n            row = matrix[j];\n            w = weights[j];\n            for (i = 0; i < cols; i++) {\n                means[j] += row[i] * w;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    var weightSum = arrayStat.sum(weights);\n    if (weightSum !== 0) {\n        for (i = 0, ii = means.length; i < ii; i++) {\n            means[i] /= weightSum;\n        }\n    }\n    return means;\n};\n\nexports.weightedCovariance = function weightedCovariance(matrix, weights, means, dimension) {\n    dimension = dimension || 0;\n    means = means || exports.weightedMean(matrix, weights, dimension);\n    var s1 = 0, s2 = 0;\n    for (var i = 0, ii = weights.length; i < ii; i++) {\n        s1 += weights[i];\n        s2 += weights[i] * weights[i];\n    }\n    var factor = s1 / (s1 * s1 - s2);\n    return exports.weightedScatter(matrix, weights, means, factor, dimension);\n};\n\nexports.weightedScatter = function weightedScatter(matrix, weights, means, factor, dimension) {\n    dimension = dimension || 0;\n    means = means || exports.weightedMean(matrix, weights, dimension);\n    if (typeof (factor) === 'undefined') {\n        factor = 1;\n    }\n    var rows = matrix.length;\n    if (rows === 0) {\n        return [[]];\n    }\n    var cols = matrix[0].length,\n        cov, i, j, k, s;\n\n    if (dimension === 0) {\n        cov = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            cov[i] = new Array(cols);\n        }\n        for (i = 0; i < cols; i++) {\n            for (j = i; j < cols; j++) {\n                s = 0;\n                for (k = 0; k < rows; k++) {\n                    s += weights[k] * (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n                }\n                cov[i][j] = s * factor;\n                cov[j][i] = s * factor;\n            }\n        }\n    } else if (dimension === 1) {\n        cov = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            cov[i] = new Array(rows);\n        }\n        for (i = 0; i < rows; i++) {\n            for (j = i; j < rows; j++) {\n                s = 0;\n                for (k = 0; k < cols; k++) {\n                    s += weights[k] * (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n                }\n                cov[i][j] = s * factor;\n                cov[j][i] = s * factor;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    return cov;\n};\n","map":{"mappings":[{"source":"node_modules/ml-stat/matrix.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/ml-stat/matrix.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}}],"sources":{"node_modules/ml-stat/matrix.js":"'use strict';\n\nvar arrayStat = require('./array');\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\nexports.max = function max(matrix) {\n    var max = -Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] > max) max = matrix[i][j];\n        }\n    }\n    return max;\n};\n\nexports.min = function min(matrix) {\n    var min = Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] < min) min = matrix[i][j];\n        }\n    }\n    return min;\n};\n\nexports.minMax = function minMax(matrix) {\n    var min = Infinity;\n    var max = -Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] < min) min = matrix[i][j];\n            if (matrix[i][j] > max) max = matrix[i][j];\n        }\n    }\n    return {\n        min:min,\n        max:max\n    };\n};\n\nexports.entropy = function entropy(matrix, eps) {\n    if (typeof (eps) === 'undefined') {\n        eps = 0;\n    }\n    var sum = 0,\n        l1 = matrix.length,\n        l2 = matrix[0].length;\n    for (var i = 0; i < l1; i++) {\n        for (var j = 0; j < l2; j++) {\n            sum += matrix[i][j] * Math.log(matrix[i][j] + eps);\n        }\n    }\n    return -sum;\n};\n\nexports.mean = function mean(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theMean, N, i, j;\n\n    if (dimension === -1) {\n        theMean = [0];\n        N = rows * cols;\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theMean[0] += matrix[i][j];\n            }\n        }\n        theMean[0] /= N;\n    } else if (dimension === 0) {\n        theMean = new Array(cols);\n        N = rows;\n        for (j = 0; j < cols; j++) {\n            theMean[j] = 0;\n            for (i = 0; i < rows; i++) {\n                theMean[j] += matrix[i][j];\n            }\n            theMean[j] /= N;\n        }\n    } else if (dimension === 1) {\n        theMean = new Array(rows);\n        N = cols;\n        for (j = 0; j < rows; j++) {\n            theMean[j] = 0;\n            for (i = 0; i < cols; i++) {\n                theMean[j] += matrix[j][i];\n            }\n            theMean[j] /= N;\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theMean;\n};\n\nexports.sum = function sum(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theSum, i, j;\n\n    if (dimension === -1) {\n        theSum = [0];\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theSum[0] += matrix[i][j];\n            }\n        }\n    } else if (dimension === 0) {\n        theSum = new Array(cols);\n        for (j = 0; j < cols; j++) {\n            theSum[j] = 0;\n            for (i = 0; i < rows; i++) {\n                theSum[j] += matrix[i][j];\n            }\n        }\n    } else if (dimension === 1) {\n        theSum = new Array(rows);\n        for (j = 0; j < rows; j++) {\n            theSum[j] = 0;\n            for (i = 0; i < cols; i++) {\n                theSum[j] += matrix[j][i];\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theSum;\n};\n\nexports.product = function product(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theProduct, i, j;\n\n    if (dimension === -1) {\n        theProduct = [1];\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theProduct[0] *= matrix[i][j];\n            }\n        }\n    } else if (dimension === 0) {\n        theProduct = new Array(cols);\n        for (j = 0; j < cols; j++) {\n            theProduct[j] = 1;\n            for (i = 0; i < rows; i++) {\n                theProduct[j] *= matrix[i][j];\n            }\n        }\n    } else if (dimension === 1) {\n        theProduct = new Array(rows);\n        for (j = 0; j < rows; j++) {\n            theProduct[j] = 1;\n            for (i = 0; i < cols; i++) {\n                theProduct[j] *= matrix[j][i];\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theProduct;\n};\n\nexports.standardDeviation = function standardDeviation(matrix, means, unbiased) {\n    var vari = exports.variance(matrix, means, unbiased), l = vari.length;\n    for (var i = 0; i < l; i++) {\n        vari[i] = Math.sqrt(vari[i]);\n    }\n    return vari;\n};\n\nexports.variance = function variance(matrix, means, unbiased) {\n    if (typeof (unbiased) === 'undefined') {\n        unbiased = true;\n    }\n    means = means || exports.mean(matrix);\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length;\n    var vari = new Array(cols);\n\n    for (var j = 0; j < cols; j++) {\n        var sum1 = 0, sum2 = 0, x = 0;\n        for (var i = 0; i < rows; i++) {\n            x = matrix[i][j] - means[j];\n            sum1 += x;\n            sum2 += x * x;\n        }\n        if (unbiased) {\n            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / (rows - 1);\n        } else {\n            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / rows;\n        }\n    }\n    return vari;\n};\n\nexports.median = function median(matrix) {\n    var rows = matrix.length, cols = matrix[0].length;\n    var medians = new Array(cols);\n\n    for (var i = 0; i < cols; i++) {\n        var data = new Array(rows);\n        for (var j = 0; j < rows; j++) {\n            data[j] = matrix[j][i];\n        }\n        data.sort(compareNumbers);\n        var N = data.length;\n        if (N % 2 === 0) {\n            medians[i] = (data[N / 2] + data[(N / 2) - 1]) * 0.5;\n        } else {\n            medians[i] = data[Math.floor(N / 2)];\n        }\n    }\n    return medians;\n};\n\nexports.mode = function mode(matrix) {\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        modes = new Array(cols),\n        i, j;\n    for (i = 0; i < cols; i++) {\n        var itemCount = new Array(rows);\n        for (var k = 0; k < rows; k++) {\n            itemCount[k] = 0;\n        }\n        var itemArray = new Array(rows);\n        var count = 0;\n\n        for (j = 0; j < rows; j++) {\n            var index = itemArray.indexOf(matrix[j][i]);\n            if (index >= 0) {\n                itemCount[index]++;\n            } else {\n                itemArray[count] = matrix[j][i];\n                itemCount[count] = 1;\n                count++;\n            }\n        }\n\n        var maxValue = 0, maxIndex = 0;\n        for (j = 0; j < count; j++) {\n            if (itemCount[j] > maxValue) {\n                maxValue = itemCount[j];\n                maxIndex = j;\n            }\n        }\n\n        modes[i] = itemArray[maxIndex];\n    }\n    return modes;\n};\n\nexports.skewness = function skewness(matrix, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var means = exports.mean(matrix);\n    var n = matrix.length, l = means.length;\n    var skew = new Array(l);\n\n    for (var j = 0; j < l; j++) {\n        var s2 = 0, s3 = 0;\n        for (var i = 0; i < n; i++) {\n            var dev = matrix[i][j] - means[j];\n            s2 += dev * dev;\n            s3 += dev * dev * dev;\n        }\n\n        var m2 = s2 / n;\n        var m3 = s3 / n;\n        var g = m3 / Math.pow(m2, 3 / 2);\n\n        if (unbiased) {\n            var a = Math.sqrt(n * (n - 1));\n            var b = n - 2;\n            skew[j] = (a / b) * g;\n        } else {\n            skew[j] = g;\n        }\n    }\n    return skew;\n};\n\nexports.kurtosis = function kurtosis(matrix, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var means = exports.mean(matrix);\n    var n = matrix.length, m = matrix[0].length;\n    var kurt = new Array(m);\n\n    for (var j = 0; j < m; j++) {\n        var s2 = 0, s4 = 0;\n        for (var i = 0; i < n; i++) {\n            var dev = matrix[i][j] - means[j];\n            s2 += dev * dev;\n            s4 += dev * dev * dev * dev;\n        }\n        var m2 = s2 / n;\n        var m4 = s4 / n;\n\n        if (unbiased) {\n            var v = s2 / (n - 1);\n            var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n            var b = s4 / (v * v);\n            var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n            kurt[j] = a * b - 3 * c;\n        } else {\n            kurt[j] = m4 / (m2 * m2) - 3;\n        }\n    }\n    return kurt;\n};\n\nexports.standardError = function standardError(matrix) {\n    var samples = matrix.length;\n    var standardDeviations = exports.standardDeviation(matrix);\n    var l = standardDeviations.length;\n    var standardErrors = new Array(l);\n    var sqrtN = Math.sqrt(samples);\n\n    for (var i = 0; i < l; i++) {\n        standardErrors[i] = standardDeviations[i] / sqrtN;\n    }\n    return standardErrors;\n};\n\nexports.covariance = function covariance(matrix, dimension) {\n    return exports.scatter(matrix, undefined, dimension);\n};\n\nexports.scatter = function scatter(matrix, divisor, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    if (typeof (divisor) === 'undefined') {\n        if (dimension === 0) {\n            divisor = matrix.length - 1;\n        } else if (dimension === 1) {\n            divisor = matrix[0].length - 1;\n        }\n    }\n    var means = exports.mean(matrix, dimension);\n    var rows = matrix.length;\n    if (rows === 0) {\n        return [[]];\n    }\n    var cols = matrix[0].length,\n        cov, i, j, s, k;\n\n    if (dimension === 0) {\n        cov = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            cov[i] = new Array(cols);\n        }\n        for (i = 0; i < cols; i++) {\n            for (j = i; j < cols; j++) {\n                s = 0;\n                for (k = 0; k < rows; k++) {\n                    s += (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n                }\n                s /= divisor;\n                cov[i][j] = s;\n                cov[j][i] = s;\n            }\n        }\n    } else if (dimension === 1) {\n        cov = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            cov[i] = new Array(rows);\n        }\n        for (i = 0; i < rows; i++) {\n            for (j = i; j < rows; j++) {\n                s = 0;\n                for (k = 0; k < cols; k++) {\n                    s += (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n                }\n                s /= divisor;\n                cov[i][j] = s;\n                cov[j][i] = s;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    return cov;\n};\n\nexports.correlation = function correlation(matrix) {\n    var means = exports.mean(matrix),\n        standardDeviations = exports.standardDeviation(matrix, true, means),\n        scores = exports.zScores(matrix, means, standardDeviations),\n        rows = matrix.length,\n        cols = matrix[0].length,\n        i, j;\n\n    var cor = new Array(cols);\n    for (i = 0; i < cols; i++) {\n        cor[i] = new Array(cols);\n    }\n    for (i = 0; i < cols; i++) {\n        for (j = i; j < cols; j++) {\n            var c = 0;\n            for (var k = 0, l = scores.length; k < l; k++) {\n                c += scores[k][j] * scores[k][i];\n            }\n            c /= rows - 1;\n            cor[i][j] = c;\n            cor[j][i] = c;\n        }\n    }\n    return cor;\n};\n\nexports.zScores = function zScores(matrix, means, standardDeviations) {\n    means = means || exports.mean(matrix);\n    if (typeof (standardDeviations) === 'undefined') standardDeviations = exports.standardDeviation(matrix, true, means);\n    return exports.standardize(exports.center(matrix, means, false), standardDeviations, true);\n};\n\nexports.center = function center(matrix, means, inPlace) {\n    means = means || exports.mean(matrix);\n    var result = matrix,\n        l = matrix.length,\n        i, j, jj;\n\n    if (!inPlace) {\n        result = new Array(l);\n        for (i = 0; i < l; i++) {\n            result[i] = new Array(matrix[i].length);\n        }\n    }\n\n    for (i = 0; i < l; i++) {\n        var row = result[i];\n        for (j = 0, jj = row.length; j < jj; j++) {\n            row[j] = matrix[i][j] - means[j];\n        }\n    }\n    return result;\n};\n\nexports.standardize = function standardize(matrix, standardDeviations, inPlace) {\n    if (typeof (standardDeviations) === 'undefined') standardDeviations = exports.standardDeviation(matrix);\n    var result = matrix,\n        l = matrix.length,\n        i, j, jj;\n\n    if (!inPlace) {\n        result = new Array(l);\n        for (i = 0; i < l; i++) {\n            result[i] = new Array(matrix[i].length);\n        }\n    }\n\n    for (i = 0; i < l; i++) {\n        var resultRow = result[i];\n        var sourceRow = matrix[i];\n        for (j = 0, jj = resultRow.length; j < jj; j++) {\n            if (standardDeviations[j] !== 0 && !isNaN(standardDeviations[j])) {\n                resultRow[j] = sourceRow[j] / standardDeviations[j];\n            }\n        }\n    }\n    return result;\n};\n\nexports.weightedVariance = function weightedVariance(matrix, weights) {\n    var means = exports.mean(matrix);\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length;\n    var vari = new Array(cols);\n\n    for (var j = 0; j < cols; j++) {\n        var sum = 0;\n        var a = 0, b = 0;\n\n        for (var i = 0; i < rows; i++) {\n            var z = matrix[i][j] - means[j];\n            var w = weights[i];\n\n            sum += w * (z * z);\n            b += w;\n            a += w * w;\n        }\n\n        vari[j] = sum * (b / (b * b - a));\n    }\n\n    return vari;\n};\n\nexports.weightedMean = function weightedMean(matrix, weights, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length,\n        means, i, ii, j, w, row;\n\n    if (dimension === 0) {\n        means = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            means[i] = 0;\n        }\n        for (i = 0; i < rows; i++) {\n            row = matrix[i];\n            w = weights[i];\n            for (j = 0; j < cols; j++) {\n                means[j] += row[j] * w;\n            }\n        }\n    } else if (dimension === 1) {\n        means = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            means[i] = 0;\n        }\n        for (j = 0; j < rows; j++) {\n            row = matrix[j];\n            w = weights[j];\n            for (i = 0; i < cols; i++) {\n                means[j] += row[i] * w;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    var weightSum = arrayStat.sum(weights);\n    if (weightSum !== 0) {\n        for (i = 0, ii = means.length; i < ii; i++) {\n            means[i] /= weightSum;\n        }\n    }\n    return means;\n};\n\nexports.weightedCovariance = function weightedCovariance(matrix, weights, means, dimension) {\n    dimension = dimension || 0;\n    means = means || exports.weightedMean(matrix, weights, dimension);\n    var s1 = 0, s2 = 0;\n    for (var i = 0, ii = weights.length; i < ii; i++) {\n        s1 += weights[i];\n        s2 += weights[i] * weights[i];\n    }\n    var factor = s1 / (s1 * s1 - s2);\n    return exports.weightedScatter(matrix, weights, means, factor, dimension);\n};\n\nexports.weightedScatter = function weightedScatter(matrix, weights, means, factor, dimension) {\n    dimension = dimension || 0;\n    means = means || exports.weightedMean(matrix, weights, dimension);\n    if (typeof (factor) === 'undefined') {\n        factor = 1;\n    }\n    var rows = matrix.length;\n    if (rows === 0) {\n        return [[]];\n    }\n    var cols = matrix[0].length,\n        cov, i, j, k, s;\n\n    if (dimension === 0) {\n        cov = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            cov[i] = new Array(cols);\n        }\n        for (i = 0; i < cols; i++) {\n            for (j = i; j < cols; j++) {\n                s = 0;\n                for (k = 0; k < rows; k++) {\n                    s += weights[k] * (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n                }\n                cov[i][j] = s * factor;\n                cov[j][i] = s * factor;\n            }\n        }\n    } else if (dimension === 1) {\n        cov = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            cov[i] = new Array(rows);\n        }\n        for (i = 0; i < rows; i++) {\n            for (j = i; j < rows; j++) {\n                s = 0;\n                for (k = 0; k < cols; k++) {\n                    s += weights[k] * (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n                }\n                cov[i][j] = s * factor;\n                cov[j][i] = s * factor;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    return cov;\n};\n"},"lineCount":612}},"hash":"06415ab1dee48745474f70d7db83cb21","cacheData":{"env":{}}}