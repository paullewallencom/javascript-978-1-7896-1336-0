{"id":"node_modules/ml-kernel-polynomial/polynomial-kernel.js","dependencies":[{"name":"/home/arish/ML_JS/Code/Section2_3/package.json","includedInParent":true,"mtime":1550320492421},{"name":"/home/arish/ML_JS/Code/Section2_3/node_modules/ml-kernel-polynomial/package.json","includedInParent":true,"mtime":1550320492389}],"generated":{"js":"'use strict';\n\nconst defaultOptions = {\n    degree: 1,\n    constant: 1,\n    scale: 1\n};\n\nclass PolynomialKernel {\n    constructor(options) {\n        options = Object.assign({}, defaultOptions, options);\n\n        this.degree = options.degree;\n        this.constant = options.constant;\n        this.scale = options.scale;\n    }\n\n    compute(x, y) {\n        var sum = 0;\n        for (var i = 0; i < x.length; i++) {\n            sum += x[i] * y[i];\n        }\n        return Math.pow(this.scale * sum + this.constant, this.degree);\n    }\n}\n\nmodule.exports = PolynomialKernel;\n","map":{"mappings":[{"source":"node_modules/ml-kernel-polynomial/polynomial-kernel.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/ml-kernel-polynomial/polynomial-kernel.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/ml-kernel-polynomial/polynomial-kernel.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/ml-kernel-polynomial/polynomial-kernel.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/ml-kernel-polynomial/polynomial-kernel.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/ml-kernel-polynomial/polynomial-kernel.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/ml-kernel-polynomial/polynomial-kernel.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/ml-kernel-polynomial/polynomial-kernel.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/ml-kernel-polynomial/polynomial-kernel.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/ml-kernel-polynomial/polynomial-kernel.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/ml-kernel-polynomial/polynomial-kernel.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/ml-kernel-polynomial/polynomial-kernel.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/ml-kernel-polynomial/polynomial-kernel.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/ml-kernel-polynomial/polynomial-kernel.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/ml-kernel-polynomial/polynomial-kernel.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/ml-kernel-polynomial/polynomial-kernel.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/ml-kernel-polynomial/polynomial-kernel.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/ml-kernel-polynomial/polynomial-kernel.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/ml-kernel-polynomial/polynomial-kernel.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/ml-kernel-polynomial/polynomial-kernel.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/ml-kernel-polynomial/polynomial-kernel.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/ml-kernel-polynomial/polynomial-kernel.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/ml-kernel-polynomial/polynomial-kernel.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/ml-kernel-polynomial/polynomial-kernel.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/ml-kernel-polynomial/polynomial-kernel.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/ml-kernel-polynomial/polynomial-kernel.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/ml-kernel-polynomial/polynomial-kernel.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/ml-kernel-polynomial/polynomial-kernel.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}}],"sources":{"node_modules/ml-kernel-polynomial/polynomial-kernel.js":"'use strict';\n\nconst defaultOptions = {\n    degree: 1,\n    constant: 1,\n    scale: 1\n};\n\nclass PolynomialKernel {\n    constructor(options) {\n        options = Object.assign({}, defaultOptions, options);\n\n        this.degree = options.degree;\n        this.constant = options.constant;\n        this.scale = options.scale;\n    }\n\n    compute(x, y) {\n        var sum = 0;\n        for (var i = 0; i < x.length; i++) {\n            sum += x[i] * y[i];\n        }\n        return Math.pow(this.scale * sum + this.constant, this.degree);\n    }\n}\n\nmodule.exports = PolynomialKernel;\n"},"lineCount":28}},"hash":"d333f0fa0ccf4fb43f2d09fcfb796002","cacheData":{"env":{}}}